name: Cancel

on:
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  cancel-older-runs:
    runs-on: ubuntu-latest
    permissions:
      # "actions: write" is critical to allow the token to cancel other runs
      actions: write

    steps:
      - name: Cancel older runs from the same PR
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request.number;
            const currentRunId = context.runId;

            // The exact 'name' from your target workflow's "name:" field at the top of its YAML
            // For example: name: Integration Tests for Metastore
            const targetWorkflowName = "Sleep-for-4-Minutes";

            // We want to look for runs that are either queued or in_progress, not completed
            const statusesToCheck = ["queued", "in_progress"];

            for (const status of statusesToCheck) {
              const runsResponse = await github.rest.actions.listWorkflowRunsForRepo({
                owner,
                repo,
                event: "pull_request",
                status,
                per_page: 100  // You can paginate if you have >100 runs simultaneously
              });

              const allRuns = runsResponse.data.workflow_runs;
              for (const run of allRuns) {
                // Skip if it's our *current* run (we never want to cancel ourselves)
                if (run.id === currentRunId) {
                  continue;
                }

                // Skip if this run is for a different workflow
                // (Different .name means it's not the "Integration Tests for Metastore" workflow)
                if (run.name !== targetWorkflowName) {
                  continue;
                }

                // pull_requests is an array of PR objects that triggered the run
                // We cancel only if run.pull_requests includes *our* current PR number
                const prNumbers = run.pull_requests.map((pr) => pr.number);
                if (prNumbers.includes(prNumber)) {
                  // Found an older run of this *same* PR => cancel it
                  await github.rest.actions.cancelWorkflowRun({
                    owner,
                    repo,
                    run_id: run.id,
                  });
                  console.log(`Canceled run ${run.id} for PR #${prNumber}`);
                }
              }
            }

            console.log("Done checking for older runs to cancel.");
